<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/16/2023 5:34:25 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="LAPTOP-MCNKFD7O"
  DTS:CreatorName="LAPTOP-MCNKFD7O\soory"
  DTS:DTSID="{18467E0D-F42D-4EE3-92A9-38B6554AC59B}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.170"
  DTS:LocaleID="5129"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="13"
  DTS:VersionGUID="{59BFD475-3D56-4EDF-8830-3A30A5865237}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{AA0B4692-D408-4CD6-9482-8C0682C4BEA0}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=D:\001_Data\data_projects\data_projects\MS SSIS Projects\Source Data\Million-sellers.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager 1]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{F3B9F4CF-F897-4775-829D-5E621271D56A}"
      DTS:ObjectName="Excel Connection Manager 1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=D:\001_Data\data_projects\data_projects\MS SSIS Projects\Source Data\TV programs.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Input CSV Manager]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{B5A3596B-1BE8-4276-AA41-8E71870D6580}"
      DTS:ObjectName="Input CSV Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="5129"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="D:\001_Data\data_projects\data_projects\MS SSIS Projects\Source Data\TV programs.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="TV program"
              DTS:DTSID="{16F4BAE2-AC31-4557-9091-6756AFEBB4EC}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Wise Owl rating"
              DTS:DTSID="{76151FCD-9F75-4FEF-9FC9-2CD16203677D}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LAPTOP-MCNKFD7O.DEV_SSIS_DB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{F419E0E8-FDEE-4388-9F6D-8F57E3EC2496}"
      DTS:ObjectName="LAPTOP-MCNKFD7O.DEV_SSIS_DB">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=LAPTOP-MCNKFD7O;Initial Catalog=DEV_SSIS_DB;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Output FF Manager]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{3BE00475-EE57-45C6-B18B-0A84BE8E8B41}"
      DTS:ObjectName="Output FF Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="5129"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="D:\001_Data\data_projects\data_projects\MS SSIS Projects\Output Data\UK_Built_Area_by_Pop.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Rank"
              DTS:DTSID="{D9DD8547-0C02-441A-9AA3-A64E8100B5F2}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="AreaName"
              DTS:DTSID="{FC4EBA96-FFAE-4EFE-BC99-021FA7EC78D4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="20"
              DTS:TextQualified="True"
              DTS:ObjectName="Population"
              DTS:DTSID="{6958BC72-0E71-4573-A285-D84D42A45603}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SSIS_CSV_DATA_CONNECTION]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{EC22F2E2-E0B7-4966-A950-F05A6464DDE0}"
      DTS:ObjectName="SSIS_CSV_DATA_CONNECTION">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="5129"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="D:\001_Data\data_projects\data_projects\MS SSIS Projects\Source Data\UK built-up areas.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Rank"
              DTS:DTSID="{F106BDE9-6B97-48CF-BEB6-E74846EB89AA}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Built-up area"
              DTS:DTSID="{C0318F80-F2B4-4586-A2F7-9B1284BD8989}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Population"
              DTS:DTSID="{6381A255-C159-4F64-8008-F28D1ADABF30}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Whale CSV]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{97D4B50D-B471-4B56-AC3A-AF58747ED004}"
      DTS:ObjectName="Whale CSV">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="5129"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="D:\001_Data\data_projects\data_projects\MS SSIS Projects\Source Data\Whales with porpoises.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Seen by"
              DTS:DTSID="{62A3BDDE-DAB5-4951-8643-8AE64A258C48}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Date"
              DTS:DTSID="{300657FC-F883-46ED-B2E5-8D54761BC32E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Location"
              DTS:DTSID="{5FFA72CE-917A-4C00-B518-D4D9E70F1EF8}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="No"
              DTS:DTSID="{C8AC8C1C-70AE-40D4-9F6E-A648763A80EF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Species"
              DTS:DTSID="{39042368-1721-4247-8D48-E4590F792BA9}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F83E13F9-CD6A-4CAA-9DB3-A7FEE7A8ADC0}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="NumberHarbourPorpoises">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A39E4717-8212-4744-9F4A-1B1E71FC0E15}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="NumberOtherSightings">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Conditional Split (Whale counting)"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:Disabled="True"
      DTS:DTSID="{ecb849b5-d46e-48bb-b9fd-09aca7d89951}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Conditional Split (Whale counting)"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Conditional Split (Whale counting)\Conditional Split"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Conditional Split"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Conditional Split (Whale counting)\Conditional Split.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Conditional Split (Whale counting)\Conditional Split.Inputs[Conditional Split Input].Columns[Species]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Species"
                      lineageId="Package\Conditional Split (Whale counting)\Whale data.Outputs[Flat File Source Output].Columns[Species]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Conditional Split (Whale counting)\Conditional Split.Outputs[Harbour_Porpoises]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Harbour_Porpoises"
                  synchronousInputId="Package\Conditional Split (Whale counting)\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Conditional Split (Whale counting)\Whale data.Outputs[Flat File Source Output].Columns[Species]} == "Harbour Porpoise"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">Species == "Harbour Porpoise"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Conditional Split (Whale counting)\Conditional Split.Outputs[Non_Harbour_Porpoises]"
                  description="Output 2 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Non_Harbour_Porpoises"
                  synchronousInputId="Package\Conditional Split (Whale counting)\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Conditional Split (Whale counting)\Whale data.Outputs[Flat File Source Output].Columns[Species]} != "Harbour Porpoise"</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">Species != "Harbour Porpoise"</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">1</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Conditional Split (Whale counting)\Conditional Split.Outputs[Bad_Rows]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Bad_Rows"
                  synchronousInputId="Package\Conditional Split (Whale counting)\Conditional Split.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Conditional Split (Whale counting)\Conditional Split.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Conditional Split (Whale counting)\Conditional Split.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Conditional Split (Whale counting)\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Conditional Split (Whale counting)\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Conditional Split (Whale counting)\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Conditional Split (Whale counting)\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Conditional Split (Whale counting)\Multicast"
              componentClassID="Microsoft.Multicast"
              contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
              name="Multicast">
              <inputs>
                <input
                  refId="Package\Conditional Split (Whale counting)\Multicast.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Conditional Split (Whale counting)\Multicast.Outputs[Multicast Output 1]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 1"
                  synchronousInputId="Package\Conditional Split (Whale counting)\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Conditional Split (Whale counting)\NumberHarbourPorpoises"
              componentClassID="Microsoft.RowCount"
              contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
              name="NumberHarbourPorpoises">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the variable to hold the row count."
                  name="VariableName">User::NumberHarbourPorpoises</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Conditional Split (Whale counting)\NumberHarbourPorpoises.Inputs[Row Count Input 1]"
                  hasSideEffects="true"
                  name="Row Count Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Conditional Split (Whale counting)\NumberHarbourPorpoises.Outputs[Row Count Output 1]"
                  name="Row Count Output 1"
                  synchronousInputId="Package\Conditional Split (Whale counting)\NumberHarbourPorpoises.Inputs[Row Count Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Conditional Split (Whale counting)\NumberOtherSightings"
              componentClassID="Microsoft.RowCount"
              contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
              name="NumberOtherSightings">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the variable to hold the row count."
                  name="VariableName">User::NumberOtherSightings</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Conditional Split (Whale counting)\NumberOtherSightings.Inputs[Row Count Input 1]"
                  hasSideEffects="true"
                  name="Row Count Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Conditional Split (Whale counting)\NumberOtherSightings.Outputs[Row Count Output 1]"
                  name="Row Count Output 1"
                  synchronousInputId="Package\Conditional Split (Whale counting)\NumberOtherSightings.Inputs[Row Count Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Conditional Split (Whale counting)\Whale data"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Source"
              localeId="5129"
              name="Whale data"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Conditional Split (Whale counting)\Whale data.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Whale CSV]"
                  connectionManagerRefId="Package.ConnectionManagers[Whale CSV]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Conditional Split (Whale counting)\Whale data.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Conditional Split (Whale counting)\Whale data.Outputs[Flat File Source Output].Columns[Seen by]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Conditional Split (Whale counting)\Whale data.Outputs[Flat File Source Output].ExternalColumns[Seen by]"
                      length="50"
                      lineageId="Package\Conditional Split (Whale counting)\Whale data.Outputs[Flat File Source Output].Columns[Seen by]"
                      name="Seen by"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Conditional Split (Whale counting)\Whale data.Outputs[Flat File Source Output].Columns[Date]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Conditional Split (Whale counting)\Whale data.Outputs[Flat File Source Output].ExternalColumns[Date]"
                      length="50"
                      lineageId="Package\Conditional Split (Whale counting)\Whale data.Outputs[Flat File Source Output].Columns[Date]"
                      name="Date"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Conditional Split (Whale counting)\Whale data.Outputs[Flat File Source Output].Columns[Location]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Conditional Split (Whale counting)\Whale data.Outputs[Flat File Source Output].ExternalColumns[Location]"
                      length="50"
                      lineageId="Package\Conditional Split (Whale counting)\Whale data.Outputs[Flat File Source Output].Columns[Location]"
                      name="Location"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Conditional Split (Whale counting)\Whale data.Outputs[Flat File Source Output].Columns[No]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Conditional Split (Whale counting)\Whale data.Outputs[Flat File Source Output].ExternalColumns[No]"
                      length="50"
                      lineageId="Package\Conditional Split (Whale counting)\Whale data.Outputs[Flat File Source Output].Columns[No]"
                      name="No"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Conditional Split (Whale counting)\Whale data.Outputs[Flat File Source Output].Columns[Species]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Conditional Split (Whale counting)\Whale data.Outputs[Flat File Source Output].ExternalColumns[Species]"
                      length="50"
                      lineageId="Package\Conditional Split (Whale counting)\Whale data.Outputs[Flat File Source Output].Columns[Species]"
                      name="Species"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Conditional Split (Whale counting)\Whale data.Outputs[Flat File Source Output].ExternalColumns[Seen by]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Seen by" />
                    <externalMetadataColumn
                      refId="Package\Conditional Split (Whale counting)\Whale data.Outputs[Flat File Source Output].ExternalColumns[Date]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Date" />
                    <externalMetadataColumn
                      refId="Package\Conditional Split (Whale counting)\Whale data.Outputs[Flat File Source Output].ExternalColumns[Location]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Location" />
                    <externalMetadataColumn
                      refId="Package\Conditional Split (Whale counting)\Whale data.Outputs[Flat File Source Output].ExternalColumns[No]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="No" />
                    <externalMetadataColumn
                      refId="Package\Conditional Split (Whale counting)\Whale data.Outputs[Flat File Source Output].ExternalColumns[Species]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Species" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Conditional Split (Whale counting)\Whale data.Outputs[Flat File Source Error Output]"
                  isErrorOut="true"
                  name="Flat File Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Conditional Split (Whale counting)\Whale data.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      codePage="1252"
                      dataType="text"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\Conditional Split (Whale counting)\Whale data.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column" />
                    <outputColumn
                      refId="Package\Conditional Split (Whale counting)\Whale data.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Conditional Split (Whale counting)\Whale data.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Conditional Split (Whale counting)\Whale data.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Conditional Split (Whale counting)\Whale data.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Conditional Split (Whale counting).Paths[Bad_Rows]"
              endId="Package\Conditional Split (Whale counting)\Multicast.Inputs[Multicast Input 1]"
              name="Bad_Rows"
              startId="Package\Conditional Split (Whale counting)\Conditional Split.Outputs[Bad_Rows]" />
            <path
              refId="Package\Conditional Split (Whale counting).Paths[Flat File Source Output]"
              endId="Package\Conditional Split (Whale counting)\Conditional Split.Inputs[Conditional Split Input]"
              name="Flat File Source Output"
              startId="Package\Conditional Split (Whale counting)\Whale data.Outputs[Flat File Source Output]" />
            <path
              refId="Package\Conditional Split (Whale counting).Paths[Harbour_Porpoises]"
              endId="Package\Conditional Split (Whale counting)\NumberHarbourPorpoises.Inputs[Row Count Input 1]"
              name="Harbour_Porpoises"
              startId="Package\Conditional Split (Whale counting)\Conditional Split.Outputs[Harbour_Porpoises]" />
            <path
              refId="Package\Conditional Split (Whale counting).Paths[Non_Harbour_Porpoises]"
              endId="Package\Conditional Split (Whale counting)\NumberOtherSightings.Inputs[Row Count Input 1]"
              name="Non_Harbour_Porpoises"
              startId="Package\Conditional Split (Whale counting)\Conditional Split.Outputs[Non_Harbour_Porpoises]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Export DB data to a CSV flat file destination"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:Disabled="True"
      DTS:DTSID="{d826dc79-8b90-4e41-9033-58d0e3aa28b0}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Export DB data to a CSV flat file destination"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Export DB data to a CSV flat file destination\Sort by &quot;Population&quot; Desc"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort by &quot;Population&quot; Desc"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Export DB data to a CSV flat file destination\Sort by &quot;Population&quot; Desc.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Export DB data to a CSV flat file destination\Sort by &quot;Population&quot; Desc.Inputs[Sort Input].Columns[Rank]"
                      cachedDataType="i4"
                      cachedName="Rank"
                      lineageId="Package\Export DB data to a CSV flat file destination\UK Built Up Area (Source DB connection).Outputs[OLE DB Source Output].Columns[Rank]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Export DB data to a CSV flat file destination\Sort by &quot;Population&quot; Desc.Inputs[Sort Input].Columns[AreaName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="255"
                      cachedName="AreaName"
                      lineageId="Package\Export DB data to a CSV flat file destination\UK Built Up Area (Source DB connection).Outputs[OLE DB Source Output].Columns[AreaName]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Export DB data to a CSV flat file destination\Sort by &quot;Population&quot; Desc.Inputs[Sort Input].Columns[Population]"
                      cachedDataType="i8"
                      cachedName="Population"
                      lineageId="Package\Export DB data to a CSV flat file destination\UK Built Up Area (Source DB connection).Outputs[OLE DB Source Output].Columns[Population]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">-1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Export DB data to a CSV flat file destination\Sort by &quot;Population&quot; Desc.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Export DB data to a CSV flat file destination\Sort by &quot;Population&quot; Desc.Outputs[Sort Output].Columns[Rank]"
                      dataType="i4"
                      lineageId="Package\Export DB data to a CSV flat file destination\Sort by &quot;Population&quot; Desc.Outputs[Sort Output].Columns[Rank]"
                      name="Rank">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Export DB data to a CSV flat file destination\UK Built Up Area (Source DB connection).Outputs[OLE DB Source Output].Columns[Rank]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Export DB data to a CSV flat file destination\Sort by &quot;Population&quot; Desc.Outputs[Sort Output].Columns[AreaName]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      lineageId="Package\Export DB data to a CSV flat file destination\Sort by &quot;Population&quot; Desc.Outputs[Sort Output].Columns[AreaName]"
                      name="AreaName">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Export DB data to a CSV flat file destination\UK Built Up Area (Source DB connection).Outputs[OLE DB Source Output].Columns[AreaName]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Export DB data to a CSV flat file destination\Sort by &quot;Population&quot; Desc.Outputs[Sort Output].Columns[Population]"
                      dataType="i8"
                      lineageId="Package\Export DB data to a CSV flat file destination\Sort by &quot;Population&quot; Desc.Outputs[Sort Output].Columns[Population]"
                      name="Population"
                      sortKeyPosition="-1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Export DB data to a CSV flat file destination\UK Built Up Area (Source DB connection).Outputs[OLE DB Source Output].Columns[Population]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Export DB data to a CSV flat file destination\UK Built Up Area (Source DB connection)"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="UK Built Up Area (Source DB connection)"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[UKBuiltUpAreas]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Export DB data to a CSV flat file destination\UK Built Up Area (Source DB connection).Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LAPTOP-MCNKFD7O.DEV_SSIS_DB]"
                  connectionManagerRefId="Package.ConnectionManagers[LAPTOP-MCNKFD7O.DEV_SSIS_DB]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Export DB data to a CSV flat file destination\UK Built Up Area (Source DB connection).Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Export DB data to a CSV flat file destination\UK Built Up Area (Source DB connection).Outputs[OLE DB Source Output].Columns[Rank]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Export DB data to a CSV flat file destination\UK Built Up Area (Source DB connection).Outputs[OLE DB Source Output].ExternalColumns[Rank]"
                      lineageId="Package\Export DB data to a CSV flat file destination\UK Built Up Area (Source DB connection).Outputs[OLE DB Source Output].Columns[Rank]"
                      name="Rank"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Export DB data to a CSV flat file destination\UK Built Up Area (Source DB connection).Outputs[OLE DB Source Output].Columns[AreaName]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Export DB data to a CSV flat file destination\UK Built Up Area (Source DB connection).Outputs[OLE DB Source Output].ExternalColumns[AreaName]"
                      length="255"
                      lineageId="Package\Export DB data to a CSV flat file destination\UK Built Up Area (Source DB connection).Outputs[OLE DB Source Output].Columns[AreaName]"
                      name="AreaName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Export DB data to a CSV flat file destination\UK Built Up Area (Source DB connection).Outputs[OLE DB Source Output].Columns[Population]"
                      dataType="i8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Export DB data to a CSV flat file destination\UK Built Up Area (Source DB connection).Outputs[OLE DB Source Output].ExternalColumns[Population]"
                      lineageId="Package\Export DB data to a CSV flat file destination\UK Built Up Area (Source DB connection).Outputs[OLE DB Source Output].Columns[Population]"
                      name="Population"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Export DB data to a CSV flat file destination\UK Built Up Area (Source DB connection).Outputs[OLE DB Source Output].ExternalColumns[Rank]"
                      dataType="i4"
                      name="Rank" />
                    <externalMetadataColumn
                      refId="Package\Export DB data to a CSV flat file destination\UK Built Up Area (Source DB connection).Outputs[OLE DB Source Output].ExternalColumns[AreaName]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="AreaName" />
                    <externalMetadataColumn
                      refId="Package\Export DB data to a CSV flat file destination\UK Built Up Area (Source DB connection).Outputs[OLE DB Source Output].ExternalColumns[Population]"
                      dataType="i8"
                      name="Population" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Export DB data to a CSV flat file destination\UK Built Up Area (Source DB connection).Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Export DB data to a CSV flat file destination\UK Built Up Area (Source DB connection).Outputs[OLE DB Source Error Output].Columns[Rank]"
                      dataType="i4"
                      lineageId="Package\Export DB data to a CSV flat file destination\UK Built Up Area (Source DB connection).Outputs[OLE DB Source Error Output].Columns[Rank]"
                      name="Rank" />
                    <outputColumn
                      refId="Package\Export DB data to a CSV flat file destination\UK Built Up Area (Source DB connection).Outputs[OLE DB Source Error Output].Columns[AreaName]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      lineageId="Package\Export DB data to a CSV flat file destination\UK Built Up Area (Source DB connection).Outputs[OLE DB Source Error Output].Columns[AreaName]"
                      name="AreaName" />
                    <outputColumn
                      refId="Package\Export DB data to a CSV flat file destination\UK Built Up Area (Source DB connection).Outputs[OLE DB Source Error Output].Columns[Population]"
                      dataType="i8"
                      lineageId="Package\Export DB data to a CSV flat file destination\UK Built Up Area (Source DB connection).Outputs[OLE DB Source Error Output].Columns[Population]"
                      name="Population" />
                    <outputColumn
                      refId="Package\Export DB data to a CSV flat file destination\UK Built Up Area (Source DB connection).Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Export DB data to a CSV flat file destination\UK Built Up Area (Source DB connection).Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Export DB data to a CSV flat file destination\UK Built Up Area (Source DB connection).Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Export DB data to a CSV flat file destination\UK Built Up Area (Source DB connection).Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Export DB data to a CSV flat file destination\UK Built Up area by Population (CSV File)"
              componentClassID="Microsoft.FlatFileDestination"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Destination"
              localeId="5129"
              name="UK Built Up area by Population (CSV File)"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">true</property>
                <property
                  dataType="System.String"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header">AA</property>
                <property
                  dataType="System.Boolean"
                  description="When text qualifier is enabled, specifies whether the text qualifier in the data written to the destination file will be escaped or not."
                  name="EscapeQualifier">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Export DB data to a CSV flat file destination\UK Built Up area by Population (CSV File).Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Output FF Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Output FF Manager]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Export DB data to a CSV flat file destination\UK Built Up area by Population (CSV File).Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Export DB data to a CSV flat file destination\UK Built Up area by Population (CSV File).Inputs[Flat File Destination Input].Columns[Rank]"
                      cachedDataType="i4"
                      cachedName="Rank"
                      externalMetadataColumnId="Package\Export DB data to a CSV flat file destination\UK Built Up area by Population (CSV File).Inputs[Flat File Destination Input].ExternalColumns[Rank]"
                      lineageId="Package\Export DB data to a CSV flat file destination\Sort by &quot;Population&quot; Desc.Outputs[Sort Output].Columns[Rank]" />
                    <inputColumn
                      refId="Package\Export DB data to a CSV flat file destination\UK Built Up area by Population (CSV File).Inputs[Flat File Destination Input].Columns[Population]"
                      cachedDataType="i8"
                      cachedName="Population"
                      cachedSortKeyPosition="-1"
                      externalMetadataColumnId="Package\Export DB data to a CSV flat file destination\UK Built Up area by Population (CSV File).Inputs[Flat File Destination Input].ExternalColumns[Population]"
                      lineageId="Package\Export DB data to a CSV flat file destination\Sort by &quot;Population&quot; Desc.Outputs[Sort Output].Columns[Population]" />
                    <inputColumn
                      refId="Package\Export DB data to a CSV flat file destination\UK Built Up area by Population (CSV File).Inputs[Flat File Destination Input].Columns[AreaName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="255"
                      cachedName="AreaName"
                      externalMetadataColumnId="Package\Export DB data to a CSV flat file destination\UK Built Up area by Population (CSV File).Inputs[Flat File Destination Input].ExternalColumns[AreaName]"
                      lineageId="Package\Export DB data to a CSV flat file destination\Sort by &quot;Population&quot; Desc.Outputs[Sort Output].Columns[AreaName]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Export DB data to a CSV flat file destination\UK Built Up area by Population (CSV File).Inputs[Flat File Destination Input].ExternalColumns[Rank]"
                      dataType="i4"
                      name="Rank" />
                    <externalMetadataColumn
                      refId="Package\Export DB data to a CSV flat file destination\UK Built Up area by Population (CSV File).Inputs[Flat File Destination Input].ExternalColumns[Population]"
                      dataType="i8"
                      name="Population" />
                    <externalMetadataColumn
                      refId="Package\Export DB data to a CSV flat file destination\UK Built Up area by Population (CSV File).Inputs[Flat File Destination Input].ExternalColumns[AreaName]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="AreaName" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Export DB data to a CSV flat file destination.Paths[OLE DB Source Output]"
              endId="Package\Export DB data to a CSV flat file destination\Sort by &quot;Population&quot; Desc.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Export DB data to a CSV flat file destination\UK Built Up Area (Source DB connection).Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Export DB data to a CSV flat file destination.Paths[Sort Output]"
              endId="Package\Export DB data to a CSV flat file destination\UK Built Up area by Population (CSV File).Inputs[Flat File Destination Input]"
              name="Sort Output"
              startId="Package\Export DB data to a CSV flat file destination\Sort by &quot;Population&quot; Desc.Outputs[Sort Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Import Excel &amp; CSV data to SQL Server table"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:Disabled="True"
      DTS:DTSID="{c1195ddf-d12b-4400-9ec7-5cafcb8dd0de}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Import Excel &amp; CSV data to SQL Server table"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Import Excel &amp; CSV data to SQL Server table\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Import Excel &amp; CSV data to SQL Server table\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import Excel &amp; CSV data to SQL Server table\Data Conversion.Inputs[Data Conversion Input].Columns[Program]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Program"
                      lineageId="Package\Import Excel &amp; CSV data to SQL Server table\Union All.Outputs[Union All Output 1].Columns[Program]" />
                    <inputColumn
                      refId="Package\Import Excel &amp; CSV data to SQL Server table\Data Conversion.Inputs[Data Conversion Input].Columns[Rating]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Rating"
                      lineageId="Package\Import Excel &amp; CSV data to SQL Server table\Union All.Outputs[Union All Output 1].Columns[Rating]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import Excel &amp; CSV data to SQL Server table\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\Import Excel &amp; CSV data to SQL Server table\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Excel &amp; CSV data to SQL Server table\Data Conversion.Outputs[Data Conversion Output].Columns[Program_NonUnicode]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Import Excel &amp; CSV data to SQL Server table\Data Conversion.Outputs[Data Conversion Output].Columns[Program_NonUnicode]"
                      name="Program_NonUnicode"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Import Excel &amp; CSV data to SQL Server table\Union All.Outputs[Union All Output 1].Columns[Program]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import Excel &amp; CSV data to SQL Server table\Data Conversion.Outputs[Data Conversion Output].Columns[Rating_Numeric]"
                      dataType="numeric"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Import Excel &amp; CSV data to SQL Server table\Data Conversion.Outputs[Data Conversion Output].Columns[Rating_Numeric]"
                      name="Rating_Numeric"
                      precision="18"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Import Excel &amp; CSV data to SQL Server table\Union All.Outputs[Union All Output 1].Columns[Rating]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Import Excel &amp; CSV data to SQL Server table\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\Import Excel &amp; CSV data to SQL Server table\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Excel &amp; CSV data to SQL Server table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import Excel &amp; CSV data to SQL Server table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import Excel &amp; CSV data to SQL Server table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import Excel &amp; CSV data to SQL Server table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import Excel &amp; CSV data to SQL Server table\Data Conversion (Converting into Unicode Columns)"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion (Converting into Unicode Columns)"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Import Excel &amp; CSV data to SQL Server table\Data Conversion (Converting into Unicode Columns).Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import Excel &amp; CSV data to SQL Server table\Data Conversion (Converting into Unicode Columns).Inputs[Data Conversion Input].Columns[TV program]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TV program"
                      lineageId="Package\Import Excel &amp; CSV data to SQL Server table\Flat File Source.Outputs[Flat File Source Output].Columns[TV program]" />
                    <inputColumn
                      refId="Package\Import Excel &amp; CSV data to SQL Server table\Data Conversion (Converting into Unicode Columns).Inputs[Data Conversion Input].Columns[Wise Owl rating]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Wise Owl rating"
                      lineageId="Package\Import Excel &amp; CSV data to SQL Server table\Flat File Source.Outputs[Flat File Source Output].Columns[Wise Owl rating]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import Excel &amp; CSV data to SQL Server table\Data Conversion (Converting into Unicode Columns).Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\Import Excel &amp; CSV data to SQL Server table\Data Conversion (Converting into Unicode Columns).Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Excel &amp; CSV data to SQL Server table\Data Conversion (Converting into Unicode Columns).Outputs[Data Conversion Output].Columns[TV_program_unicode]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Import Excel &amp; CSV data to SQL Server table\Data Conversion (Converting into Unicode Columns).Outputs[Data Conversion Output].Columns[TV_program_unicode]"
                      name="TV_program_unicode"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Import Excel &amp; CSV data to SQL Server table\Flat File Source.Outputs[Flat File Source Output].Columns[TV program]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import Excel &amp; CSV data to SQL Server table\Data Conversion (Converting into Unicode Columns).Outputs[Data Conversion Output].Columns[Wise_Owl_rating_unicode]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Import Excel &amp; CSV data to SQL Server table\Data Conversion (Converting into Unicode Columns).Outputs[Data Conversion Output].Columns[Wise_Owl_rating_unicode]"
                      name="Wise_Owl_rating_unicode"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Import Excel &amp; CSV data to SQL Server table\Flat File Source.Outputs[Flat File Source Output].Columns[Wise Owl rating]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Import Excel &amp; CSV data to SQL Server table\Data Conversion (Converting into Unicode Columns).Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\Import Excel &amp; CSV data to SQL Server table\Data Conversion (Converting into Unicode Columns).Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Excel &amp; CSV data to SQL Server table\Data Conversion (Converting into Unicode Columns).Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import Excel &amp; CSV data to SQL Server table\Data Conversion (Converting into Unicode Columns).Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import Excel &amp; CSV data to SQL Server table\Data Conversion (Converting into Unicode Columns).Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import Excel &amp; CSV data to SQL Server table\Data Conversion (Converting into Unicode Columns).Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import Excel &amp; CSV data to SQL Server table\Excel Source"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Excel Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">'Programs from Excel$'</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import Excel &amp; CSV data to SQL Server table\Excel Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager 1]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager 1]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Import Excel &amp; CSV data to SQL Server table\Excel Source.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Excel &amp; CSV data to SQL Server table\Excel Source.Outputs[Excel Source Output].Columns[Program]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Excel &amp; CSV data to SQL Server table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Program]"
                      length="255"
                      lineageId="Package\Import Excel &amp; CSV data to SQL Server table\Excel Source.Outputs[Excel Source Output].Columns[Program]"
                      name="Program"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import Excel &amp; CSV data to SQL Server table\Excel Source.Outputs[Excel Source Output].Columns[Rating]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Excel &amp; CSV data to SQL Server table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Rating]"
                      length="255"
                      lineageId="Package\Import Excel &amp; CSV data to SQL Server table\Excel Source.Outputs[Excel Source Output].Columns[Rating]"
                      name="Rating"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import Excel &amp; CSV data to SQL Server table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Program]"
                      dataType="wstr"
                      length="255"
                      name="Program" />
                    <externalMetadataColumn
                      refId="Package\Import Excel &amp; CSV data to SQL Server table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Rating]"
                      dataType="wstr"
                      length="255"
                      name="Rating" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Import Excel &amp; CSV data to SQL Server table\Excel Source.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Excel &amp; CSV data to SQL Server table\Excel Source.Outputs[Excel Source Error Output].Columns[Program]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Import Excel &amp; CSV data to SQL Server table\Excel Source.Outputs[Excel Source Error Output].Columns[Program]"
                      name="Program" />
                    <outputColumn
                      refId="Package\Import Excel &amp; CSV data to SQL Server table\Excel Source.Outputs[Excel Source Error Output].Columns[Rating]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Import Excel &amp; CSV data to SQL Server table\Excel Source.Outputs[Excel Source Error Output].Columns[Rating]"
                      name="Rating" />
                    <outputColumn
                      refId="Package\Import Excel &amp; CSV data to SQL Server table\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import Excel &amp; CSV data to SQL Server table\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import Excel &amp; CSV data to SQL Server table\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import Excel &amp; CSV data to SQL Server table\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import Excel &amp; CSV data to SQL Server table\Flat File Source"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Source"
              localeId="5129"
              name="Flat File Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import Excel &amp; CSV data to SQL Server table\Flat File Source.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Input CSV Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Input CSV Manager]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Import Excel &amp; CSV data to SQL Server table\Flat File Source.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Excel &amp; CSV data to SQL Server table\Flat File Source.Outputs[Flat File Source Output].Columns[TV program]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Excel &amp; CSV data to SQL Server table\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[TV program]"
                      length="50"
                      lineageId="Package\Import Excel &amp; CSV data to SQL Server table\Flat File Source.Outputs[Flat File Source Output].Columns[TV program]"
                      name="TV program"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import Excel &amp; CSV data to SQL Server table\Flat File Source.Outputs[Flat File Source Output].Columns[Wise Owl rating]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Excel &amp; CSV data to SQL Server table\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Wise Owl rating]"
                      length="50"
                      lineageId="Package\Import Excel &amp; CSV data to SQL Server table\Flat File Source.Outputs[Flat File Source Output].Columns[Wise Owl rating]"
                      name="Wise Owl rating"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import Excel &amp; CSV data to SQL Server table\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[TV program]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="TV program" />
                    <externalMetadataColumn
                      refId="Package\Import Excel &amp; CSV data to SQL Server table\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Wise Owl rating]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Wise Owl rating" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Import Excel &amp; CSV data to SQL Server table\Flat File Source.Outputs[Flat File Source Error Output]"
                  isErrorOut="true"
                  name="Flat File Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Excel &amp; CSV data to SQL Server table\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      codePage="1252"
                      dataType="text"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\Import Excel &amp; CSV data to SQL Server table\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column" />
                    <outputColumn
                      refId="Package\Import Excel &amp; CSV data to SQL Server table\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import Excel &amp; CSV data to SQL Server table\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import Excel &amp; CSV data to SQL Server table\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import Excel &amp; CSV data to SQL Server table\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import Excel &amp; CSV data to SQL Server table\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[TvPrograms]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import Excel &amp; CSV data to SQL Server table\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LAPTOP-MCNKFD7O.DEV_SSIS_DB]"
                  connectionManagerRefId="Package.ConnectionManagers[LAPTOP-MCNKFD7O.DEV_SSIS_DB]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Import Excel &amp; CSV data to SQL Server table\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import Excel &amp; CSV data to SQL Server table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Rating]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Rating"
                      externalMetadataColumnId="Package\Import Excel &amp; CSV data to SQL Server table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[OwlRating]"
                      lineageId="Package\Import Excel &amp; CSV data to SQL Server table\Union All.Outputs[Union All Output 1].Columns[Rating]" />
                    <inputColumn
                      refId="Package\Import Excel &amp; CSV data to SQL Server table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Program_NonUnicode]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="255"
                      cachedName="Program_NonUnicode"
                      externalMetadataColumnId="Package\Import Excel &amp; CSV data to SQL Server table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProgramName]"
                      lineageId="Package\Import Excel &amp; CSV data to SQL Server table\Data Conversion.Outputs[Data Conversion Output].Columns[Program_NonUnicode]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import Excel &amp; CSV data to SQL Server table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProgramId]"
                      dataType="i4"
                      name="ProgramId" />
                    <externalMetadataColumn
                      refId="Package\Import Excel &amp; CSV data to SQL Server table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProgramName]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="ProgramName" />
                    <externalMetadataColumn
                      refId="Package\Import Excel &amp; CSV data to SQL Server table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[OwlRating]"
                      dataType="ui1"
                      name="OwlRating" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import Excel &amp; CSV data to SQL Server table\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Import Excel &amp; CSV data to SQL Server table\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Excel &amp; CSV data to SQL Server table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import Excel &amp; CSV data to SQL Server table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import Excel &amp; CSV data to SQL Server table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import Excel &amp; CSV data to SQL Server table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import Excel &amp; CSV data to SQL Server table\Union All"
              componentClassID="Microsoft.UnionAll"
              contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
              name="Union All"
              version="1">
              <inputs>
                <input
                  refId="Package\Import Excel &amp; CSV data to SQL Server table\Union All.Inputs[Union All Input 1]"
                  hasSideEffects="true"
                  name="Union All Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import Excel &amp; CSV data to SQL Server table\Union All.Inputs[Union All Input 1].Columns[Program]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Program"
                      lineageId="Package\Import Excel &amp; CSV data to SQL Server table\Excel Source.Outputs[Excel Source Output].Columns[Program]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Import Excel &amp; CSV data to SQL Server table\Union All.Outputs[Union All Output 1].Columns[Program]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Import Excel &amp; CSV data to SQL Server table\Union All.Inputs[Union All Input 1].Columns[Rating]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Rating"
                      lineageId="Package\Import Excel &amp; CSV data to SQL Server table\Excel Source.Outputs[Excel Source Output].Columns[Rating]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Import Excel &amp; CSV data to SQL Server table\Union All.Outputs[Union All Output 1].Columns[Rating]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Import Excel &amp; CSV data to SQL Server table\Union All.Inputs[Union All Input 2]"
                  hasSideEffects="true"
                  name="Union All Input 2">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import Excel &amp; CSV data to SQL Server table\Union All.Inputs[Union All Input 2].Columns[TV_program_unicode]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="TV_program_unicode"
                      lineageId="Package\Import Excel &amp; CSV data to SQL Server table\Data Conversion (Converting into Unicode Columns).Outputs[Data Conversion Output].Columns[TV_program_unicode]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Import Excel &amp; CSV data to SQL Server table\Union All.Outputs[Union All Output 1].Columns[Program]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Import Excel &amp; CSV data to SQL Server table\Union All.Inputs[Union All Input 2].Columns[Wise_Owl_rating_unicode]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Wise_Owl_rating_unicode"
                      lineageId="Package\Import Excel &amp; CSV data to SQL Server table\Data Conversion (Converting into Unicode Columns).Outputs[Data Conversion Output].Columns[Wise_Owl_rating_unicode]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\Import Excel &amp; CSV data to SQL Server table\Union All.Outputs[Union All Output 1].Columns[Rating]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Import Excel &amp; CSV data to SQL Server table\Union All.Inputs[Union All Input 3]"
                  dangling="true"
                  hasSideEffects="true"
                  name="Union All Input 3">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import Excel &amp; CSV data to SQL Server table\Union All.Outputs[Union All Output 1]"
                  name="Union All Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Excel &amp; CSV data to SQL Server table\Union All.Outputs[Union All Output 1].Columns[Program]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Import Excel &amp; CSV data to SQL Server table\Union All.Outputs[Union All Output 1].Columns[Program]"
                      name="Program" />
                    <outputColumn
                      refId="Package\Import Excel &amp; CSV data to SQL Server table\Union All.Outputs[Union All Output 1].Columns[Rating]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Import Excel &amp; CSV data to SQL Server table\Union All.Outputs[Union All Output 1].Columns[Rating]"
                      name="Rating" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Import Excel &amp; CSV data to SQL Server table.Paths[Data Conversion Output]"
              endId="Package\Import Excel &amp; CSV data to SQL Server table\Union All.Inputs[Union All Input 2]"
              name="Data Conversion Output"
              startId="Package\Import Excel &amp; CSV data to SQL Server table\Data Conversion (Converting into Unicode Columns).Outputs[Data Conversion Output]" />
            <path
              refId="Package\Import Excel &amp; CSV data to SQL Server table.Paths[Data Conversion Output1]"
              endId="Package\Import Excel &amp; CSV data to SQL Server table\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Data Conversion Output"
              startId="Package\Import Excel &amp; CSV data to SQL Server table\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\Import Excel &amp; CSV data to SQL Server table.Paths[Excel Source Output]"
              endId="Package\Import Excel &amp; CSV data to SQL Server table\Union All.Inputs[Union All Input 1]"
              name="Excel Source Output"
              startId="Package\Import Excel &amp; CSV data to SQL Server table\Excel Source.Outputs[Excel Source Output]" />
            <path
              refId="Package\Import Excel &amp; CSV data to SQL Server table.Paths[Flat File Source Output]"
              endId="Package\Import Excel &amp; CSV data to SQL Server table\Data Conversion (Converting into Unicode Columns).Inputs[Data Conversion Input]"
              name="Flat File Source Output"
              startId="Package\Import Excel &amp; CSV data to SQL Server table\Flat File Source.Outputs[Flat File Source Output]" />
            <path
              refId="Package\Import Excel &amp; CSV data to SQL Server table.Paths[Union All Output 1]"
              endId="Package\Import Excel &amp; CSV data to SQL Server table\Data Conversion.Inputs[Data Conversion Input]"
              name="Union All Output 1"
              startId="Package\Import Excel &amp; CSV data to SQL Server table\Union All.Outputs[Union All Output 1]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Import Excel text data to SQL Server varchar columns"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:Disabled="True"
      DTS:DTSID="{ee19d1c2-4242-46de-b3f1-7ea5e5d416b3}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Import Excel text data to SQL Server varchar columns"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Import Excel text data to SQL Server varchar columns\Data Conversion (Unicode to Varchar)"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion (Unicode to Varchar)"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Import Excel text data to SQL Server varchar columns\Data Conversion (Unicode to Varchar).Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import Excel text data to SQL Server varchar columns\Data Conversion (Unicode to Varchar).Inputs[Data Conversion Input].Columns[Artist]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Artist"
                      lineageId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Output].Columns[Artist]" />
                    <inputColumn
                      refId="Package\Import Excel text data to SQL Server varchar columns\Data Conversion (Unicode to Varchar).Inputs[Data Conversion Input].Columns[Title]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Title"
                      lineageId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Output].Columns[Title]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import Excel text data to SQL Server varchar columns\Data Conversion (Unicode to Varchar).Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\Import Excel text data to SQL Server varchar columns\Data Conversion (Unicode to Varchar).Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Excel text data to SQL Server varchar columns\Data Conversion (Unicode to Varchar).Outputs[Data Conversion Output].Columns[Artist_NonUnicode]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Import Excel text data to SQL Server varchar columns\Data Conversion (Unicode to Varchar).Outputs[Data Conversion Output].Columns[Artist_NonUnicode]"
                      name="Artist_NonUnicode"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Output].Columns[Artist]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import Excel text data to SQL Server varchar columns\Data Conversion (Unicode to Varchar).Outputs[Data Conversion Output].Columns[Title_NonUnicode]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Import Excel text data to SQL Server varchar columns\Data Conversion (Unicode to Varchar).Outputs[Data Conversion Output].Columns[Title_NonUnicode]"
                      name="Title_NonUnicode"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Output].Columns[Title]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Import Excel text data to SQL Server varchar columns\Data Conversion (Unicode to Varchar).Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\Import Excel text data to SQL Server varchar columns\Data Conversion (Unicode to Varchar).Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Excel text data to SQL Server varchar columns\Data Conversion (Unicode to Varchar).Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import Excel text data to SQL Server varchar columns\Data Conversion (Unicode to Varchar).Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import Excel text data to SQL Server varchar columns\Data Conversion (Unicode to Varchar).Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import Excel text data to SQL Server varchar columns\Data Conversion (Unicode to Varchar).Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers)"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Excel Source (Million Sellers)"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">'Million-sellers$'</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Output].Columns[Artist]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Output].ExternalColumns[Artist]"
                      length="255"
                      lineageId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Output].Columns[Artist]"
                      name="Artist"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Output].Columns[Rank]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Output].ExternalColumns[Rank]"
                      lineageId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Output].Columns[Rank]"
                      name="Rank"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Output].Columns[Sales]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Output].ExternalColumns[Sales]"
                      lineageId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Output].Columns[Sales]"
                      name="Sales"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Output].Columns[Title]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Output].ExternalColumns[Title]"
                      length="255"
                      lineageId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Output].Columns[Title]"
                      name="Title"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Output].Columns[Year]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Output].ExternalColumns[Year]"
                      lineageId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Output].Columns[Year]"
                      name="Year"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Output].ExternalColumns[Artist]"
                      dataType="wstr"
                      length="255"
                      name="Artist" />
                    <externalMetadataColumn
                      refId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Output].ExternalColumns[Rank]"
                      dataType="r8"
                      name="Rank" />
                    <externalMetadataColumn
                      refId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Output].ExternalColumns[Sales]"
                      dataType="r8"
                      name="Sales" />
                    <externalMetadataColumn
                      refId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Output].ExternalColumns[Title]"
                      dataType="wstr"
                      length="255"
                      name="Title" />
                    <externalMetadataColumn
                      refId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Output].ExternalColumns[Year]"
                      dataType="r8"
                      name="Year" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Error Output].Columns[Artist]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Error Output].Columns[Artist]"
                      name="Artist" />
                    <outputColumn
                      refId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Error Output].Columns[Rank]"
                      dataType="r8"
                      lineageId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Error Output].Columns[Rank]"
                      name="Rank" />
                    <outputColumn
                      refId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Error Output].Columns[Sales]"
                      dataType="r8"
                      lineageId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Error Output].Columns[Sales]"
                      name="Sales" />
                    <outputColumn
                      refId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Error Output].Columns[Title]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Error Output].Columns[Title]"
                      name="Title" />
                    <outputColumn
                      refId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Error Output].Columns[Year]"
                      dataType="r8"
                      lineageId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Error Output].Columns[Year]"
                      name="Year" />
                    <outputColumn
                      refId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import Excel text data to SQL Server varchar columns\SQL Server TGT DB"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="SQL Server TGT DB"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[MillionSellers]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import Excel text data to SQL Server varchar columns\SQL Server TGT DB.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LAPTOP-MCNKFD7O.DEV_SSIS_DB]"
                  connectionManagerRefId="Package.ConnectionManagers[LAPTOP-MCNKFD7O.DEV_SSIS_DB]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Import Excel text data to SQL Server varchar columns\SQL Server TGT DB.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import Excel text data to SQL Server varchar columns\SQL Server TGT DB.Inputs[OLE DB Destination Input].Columns[Sales]"
                      cachedDataType="r8"
                      cachedName="Sales"
                      externalMetadataColumnId="Package\Import Excel text data to SQL Server varchar columns\SQL Server TGT DB.Inputs[OLE DB Destination Input].ExternalColumns[Sales]"
                      lineageId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Output].Columns[Sales]" />
                    <inputColumn
                      refId="Package\Import Excel text data to SQL Server varchar columns\SQL Server TGT DB.Inputs[OLE DB Destination Input].Columns[Year]"
                      cachedDataType="r8"
                      cachedName="Year"
                      externalMetadataColumnId="Package\Import Excel text data to SQL Server varchar columns\SQL Server TGT DB.Inputs[OLE DB Destination Input].ExternalColumns[SongYear]"
                      lineageId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Output].Columns[Year]" />
                    <inputColumn
                      refId="Package\Import Excel text data to SQL Server varchar columns\SQL Server TGT DB.Inputs[OLE DB Destination Input].Columns[Title_NonUnicode]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="255"
                      cachedName="Title_NonUnicode"
                      externalMetadataColumnId="Package\Import Excel text data to SQL Server varchar columns\SQL Server TGT DB.Inputs[OLE DB Destination Input].ExternalColumns[Title]"
                      lineageId="Package\Import Excel text data to SQL Server varchar columns\Data Conversion (Unicode to Varchar).Outputs[Data Conversion Output].Columns[Title_NonUnicode]" />
                    <inputColumn
                      refId="Package\Import Excel text data to SQL Server varchar columns\SQL Server TGT DB.Inputs[OLE DB Destination Input].Columns[Artist_NonUnicode]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="255"
                      cachedName="Artist_NonUnicode"
                      externalMetadataColumnId="Package\Import Excel text data to SQL Server varchar columns\SQL Server TGT DB.Inputs[OLE DB Destination Input].ExternalColumns[Artist]"
                      lineageId="Package\Import Excel text data to SQL Server varchar columns\Data Conversion (Unicode to Varchar).Outputs[Data Conversion Output].Columns[Artist_NonUnicode]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import Excel text data to SQL Server varchar columns\SQL Server TGT DB.Inputs[OLE DB Destination Input].ExternalColumns[Artist]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="Artist" />
                    <externalMetadataColumn
                      refId="Package\Import Excel text data to SQL Server varchar columns\SQL Server TGT DB.Inputs[OLE DB Destination Input].ExternalColumns[Sales]"
                      dataType="numeric"
                      name="Sales"
                      precision="10"
                      scale="2" />
                    <externalMetadataColumn
                      refId="Package\Import Excel text data to SQL Server varchar columns\SQL Server TGT DB.Inputs[OLE DB Destination Input].ExternalColumns[Title]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="Title" />
                    <externalMetadataColumn
                      refId="Package\Import Excel text data to SQL Server varchar columns\SQL Server TGT DB.Inputs[OLE DB Destination Input].ExternalColumns[SongYear]"
                      dataType="i4"
                      name="SongYear" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import Excel text data to SQL Server varchar columns\SQL Server TGT DB.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Import Excel text data to SQL Server varchar columns\SQL Server TGT DB.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Excel text data to SQL Server varchar columns\SQL Server TGT DB.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import Excel text data to SQL Server varchar columns\SQL Server TGT DB.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import Excel text data to SQL Server varchar columns\SQL Server TGT DB.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import Excel text data to SQL Server varchar columns\SQL Server TGT DB.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Import Excel text data to SQL Server varchar columns.Paths[Data Conversion Output]"
              endId="Package\Import Excel text data to SQL Server varchar columns\SQL Server TGT DB.Inputs[OLE DB Destination Input]"
              name="Data Conversion Output"
              startId="Package\Import Excel text data to SQL Server varchar columns\Data Conversion (Unicode to Varchar).Outputs[Data Conversion Output]" />
            <path
              refId="Package\Import Excel text data to SQL Server varchar columns.Paths[Excel Source Output]"
              endId="Package\Import Excel text data to SQL Server varchar columns\Data Conversion (Unicode to Varchar).Inputs[Data Conversion Input]"
              name="Excel Source Output"
              startId="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers).Outputs[Excel Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load CSV data to SQL Table"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:Disabled="True"
      DTS:DTSID="{EE8797B5-27FF-4A1E-A499-AF829738CAAA}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load CSV data to SQL Table"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Load CSV data to SQL Table\SQL DEV_SSIS_DB UKBuiltUpAreas"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="SQL DEV_SSIS_DB UKBuiltUpAreas"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[UKBuiltUpAreas]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Load CSV data to SQL Table\SQL DEV_SSIS_DB UKBuiltUpAreas.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LAPTOP-MCNKFD7O.DEV_SSIS_DB]"
                  connectionManagerRefId="Package.ConnectionManagers[LAPTOP-MCNKFD7O.DEV_SSIS_DB]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Load CSV data to SQL Table\SQL DEV_SSIS_DB UKBuiltUpAreas.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load CSV data to SQL Table\SQL DEV_SSIS_DB UKBuiltUpAreas.Inputs[OLE DB Destination Input].Columns[Rank]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Rank"
                      externalMetadataColumnId="Package\Load CSV data to SQL Table\SQL DEV_SSIS_DB UKBuiltUpAreas.Inputs[OLE DB Destination Input].ExternalColumns[Rank]"
                      lineageId="Package\Load CSV data to SQL Table\UK Built Up Area CSV Data.Outputs[Flat File Source Output].Columns[Rank]" />
                    <inputColumn
                      refId="Package\Load CSV data to SQL Table\SQL DEV_SSIS_DB UKBuiltUpAreas.Inputs[OLE DB Destination Input].Columns[Population]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Population"
                      externalMetadataColumnId="Package\Load CSV data to SQL Table\SQL DEV_SSIS_DB UKBuiltUpAreas.Inputs[OLE DB Destination Input].ExternalColumns[Population]"
                      lineageId="Package\Load CSV data to SQL Table\UK Built Up Area CSV Data.Outputs[Flat File Source Output].Columns[Population]" />
                    <inputColumn
                      refId="Package\Load CSV data to SQL Table\SQL DEV_SSIS_DB UKBuiltUpAreas.Inputs[OLE DB Destination Input].Columns[Built-up area]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Built-up area"
                      externalMetadataColumnId="Package\Load CSV data to SQL Table\SQL DEV_SSIS_DB UKBuiltUpAreas.Inputs[OLE DB Destination Input].ExternalColumns[AreaName]"
                      lineageId="Package\Load CSV data to SQL Table\UK Built Up Area CSV Data.Outputs[Flat File Source Output].Columns[Built-up area]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Load CSV data to SQL Table\SQL DEV_SSIS_DB UKBuiltUpAreas.Inputs[OLE DB Destination Input].ExternalColumns[Rank]"
                      dataType="i4"
                      name="Rank" />
                    <externalMetadataColumn
                      refId="Package\Load CSV data to SQL Table\SQL DEV_SSIS_DB UKBuiltUpAreas.Inputs[OLE DB Destination Input].ExternalColumns[AreaName]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="AreaName" />
                    <externalMetadataColumn
                      refId="Package\Load CSV data to SQL Table\SQL DEV_SSIS_DB UKBuiltUpAreas.Inputs[OLE DB Destination Input].ExternalColumns[Population]"
                      dataType="i8"
                      name="Population" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load CSV data to SQL Table\SQL DEV_SSIS_DB UKBuiltUpAreas.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Load CSV data to SQL Table\SQL DEV_SSIS_DB UKBuiltUpAreas.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load CSV data to SQL Table\SQL DEV_SSIS_DB UKBuiltUpAreas.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load CSV data to SQL Table\SQL DEV_SSIS_DB UKBuiltUpAreas.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load CSV data to SQL Table\SQL DEV_SSIS_DB UKBuiltUpAreas.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load CSV data to SQL Table\SQL DEV_SSIS_DB UKBuiltUpAreas.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load CSV data to SQL Table\UK Built Up Area CSV Data"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Source"
              localeId="5129"
              name="UK Built Up Area CSV Data"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Load CSV data to SQL Table\UK Built Up Area CSV Data.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[SSIS_CSV_DATA_CONNECTION]"
                  connectionManagerRefId="Package.ConnectionManagers[SSIS_CSV_DATA_CONNECTION]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Load CSV data to SQL Table\UK Built Up Area CSV Data.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load CSV data to SQL Table\UK Built Up Area CSV Data.Outputs[Flat File Source Output].Columns[Rank]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load CSV data to SQL Table\UK Built Up Area CSV Data.Outputs[Flat File Source Output].ExternalColumns[Rank]"
                      length="50"
                      lineageId="Package\Load CSV data to SQL Table\UK Built Up Area CSV Data.Outputs[Flat File Source Output].Columns[Rank]"
                      name="Rank"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Load CSV data to SQL Table\UK Built Up Area CSV Data.Outputs[Flat File Source Output].Columns[Built-up area]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load CSV data to SQL Table\UK Built Up Area CSV Data.Outputs[Flat File Source Output].ExternalColumns[Built-up area]"
                      length="50"
                      lineageId="Package\Load CSV data to SQL Table\UK Built Up Area CSV Data.Outputs[Flat File Source Output].Columns[Built-up area]"
                      name="Built-up area"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Load CSV data to SQL Table\UK Built Up Area CSV Data.Outputs[Flat File Source Output].Columns[Population]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load CSV data to SQL Table\UK Built Up Area CSV Data.Outputs[Flat File Source Output].ExternalColumns[Population]"
                      length="50"
                      lineageId="Package\Load CSV data to SQL Table\UK Built Up Area CSV Data.Outputs[Flat File Source Output].Columns[Population]"
                      name="Population"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Load CSV data to SQL Table\UK Built Up Area CSV Data.Outputs[Flat File Source Output].ExternalColumns[Rank]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Rank" />
                    <externalMetadataColumn
                      refId="Package\Load CSV data to SQL Table\UK Built Up Area CSV Data.Outputs[Flat File Source Output].ExternalColumns[Built-up area]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Built-up area" />
                    <externalMetadataColumn
                      refId="Package\Load CSV data to SQL Table\UK Built Up Area CSV Data.Outputs[Flat File Source Output].ExternalColumns[Population]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Population" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Load CSV data to SQL Table\UK Built Up Area CSV Data.Outputs[Flat File Source Error Output]"
                  isErrorOut="true"
                  name="Flat File Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load CSV data to SQL Table\UK Built Up Area CSV Data.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      codePage="1252"
                      dataType="text"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\Load CSV data to SQL Table\UK Built Up Area CSV Data.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column" />
                    <outputColumn
                      refId="Package\Load CSV data to SQL Table\UK Built Up Area CSV Data.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load CSV data to SQL Table\UK Built Up Area CSV Data.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load CSV data to SQL Table\UK Built Up Area CSV Data.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load CSV data to SQL Table\UK Built Up Area CSV Data.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Load CSV data to SQL Table.Paths[Flat File Source Output]"
              endId="Package\Load CSV data to SQL Table\SQL DEV_SSIS_DB UKBuiltUpAreas.Inputs[OLE DB Destination Input]"
              name="Flat File Source Output"
              startId="Package\Load CSV data to SQL Table\UK Built Up Area CSV Data.Outputs[Flat File Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Truncate TGT table before loading"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:Disabled="True"
      DTS:DTSID="{8601C466-5591-47BB-9DCA-9BBF41FFEBAA}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Truncate TGT table before loading"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{F419E0E8-FDEE-4388-9F6D-8F57E3EC2496}"
          SQLTask:SqlStatementSource="DELETE FROM UKBuiltUpAreas" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{6939420A-62F0-4026-A9D7-CF3696134807}"
      DTS:From="Package\Truncate TGT table before loading"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Load CSV data to SQL Table" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssge="clr-namespace:Microsoft.SqlServer.Graph.Extended;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
        <NodeLayout
          Size="284,42"
          Id="Package\Export DB data to a CSV flat file destination"
          TopLeft="307.71428572645,489.411762636013" />
        <NodeLayout
          Size="290,42"
          Id="Package\Import Excel &amp; CSV data to SQL Server table"
          TopLeft="305.5714285471,897.599994712717" />
        <NodeLayout
          Size="332,42"
          Id="Package\Import Excel text data to SQL Server varchar columns"
          TopLeft="305.5714285471,713.188231894384" />
        <NodeLayout
          Size="236,48"
          Id="Package\Load CSV data to SQL Table"
          TopLeft="307,250.05882266071" />
        <NodeLayout
          Size="241,42"
          Id="Package\Truncate TGT table before loading"
          TopLeft="304,164.05882266071" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="424.75,206.05882266071">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,44"
              Start="0,0"
              End="0,36.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="SSIS Wise Owl: &#xA;Use a data flow task to import CSV records of UK built-up areas to a SQL Server table"
          ParentId="Package"
          Size="637,58"
          Id="adfc3db6-b7ba-412d-81aa-14261b437877"
          TopLeft="116,95">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="14.25"
              Color="#FFFFFFFF"
              Weight="Bold">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="SSIS Wise Owl: &#xA;Use a data flow task to export UK built-up areas data from a SQL Server table to a CSV and TXT file"
          ParentId="Package"
          Size="736,58"
          Id="88740caa-4085-4c13-aea9-0c94b7dd304d"
          TopLeft="116,420">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="14.25"
              Color="#FFFFFFFF"
              Weight="Bold">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="SSIS Wise Owl: &#xA;Use a data conversion task to import Excel text data to SQL Server varchar columns"
          ParentId="Package"
          Size="626,58"
          Id="d89f09a0-d0b6-48a5-95fe-4956644fa82c"
          TopLeft="116,630.776469076051">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="14.25"
              Color="#FFFFFFFF"
              Weight="Bold">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="SSIS Wise Owl: &#xA;Use data conversion and union all transforms to combine two data sources (Excel and CSV) into a single table"
          ParentId="Package"
          Size="813,58"
          Id="0d7b6e7f-f515-49c6-a602-267268d411a9"
          TopLeft="116,815.188231894384">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="14.25"
              Color="#FFFFFFFF"
              Weight="Bold">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <NodeLayout
          Size="239,42"
          Id="Package\Conditional Split (Whale counting)"
          TopLeft="354.5714285471,1082.01175753105" />
        <AnnotationLayout
          Text="SSIS Wise Owl: &#xA;Conditional split transforms exercise: Count the number of types of marine mammal in a CSV file, using a conditional split to differentiate"
          ParentId="Package"
          Size="1012,58"
          Id="1cb49187-b17c-414c-9ae0-513fdb256679"
          TopLeft="115,1000.59999471272">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="14.25"
              Color="#FFFFFFFF"
              Weight="Bold">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Export DB data to a CSV flat file destination">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="273,42"
          Id="Package\Export DB data to a CSV flat file destination\UK Built Up area by Population (CSV File)"
          TopLeft="182.857145971182,270.705886149489" />
        <NodeLayout
          Size="199,42"
          Id="Package\Export DB data to a CSV flat file destination\Sort by &quot;Population&quot; Desc"
          TopLeft="225.714289558177,172.058825942472" />
        <NodeLayout
          Size="271,42"
          Id="Package\Export DB data to a CSV flat file destination\UK Built Up Area (Source DB connection)"
          TopLeft="186.428574603431,83.3529423454641" />
        <EdgeLayout
          Id="Package\Export DB data to a CSV flat file destination.Paths[Sort Output]"
          TopLeft="322.285717764679,213.658825942472">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,57.0470602070172"
              Start="0,0"
              End="0,49.5470602070172">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,49.5470602070172" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Export DB data to a CSV flat file destination.Paths[OLE DB Source Output]"
          TopLeft="323.671432080804,124.952942345464">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,47.1058835970077"
              Start="0,0"
              End="0,39.6058835970077">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.6058835970077" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Export DB data to a CSV flat file destination\UK Built Up Area (Source DB connection)">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Import Excel &amp; CSV data to SQL Server table">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="324,42"
          Id="Package\Import Excel &amp; CSV data to SQL Server table\Data Conversion (Converting into Unicode Columns)"
          TopLeft="526,183" />
        <NodeLayout
          Size="171,42"
          Id="Package\Import Excel &amp; CSV data to SQL Server table\OLE DB Destination"
          TopLeft="384,546" />
        <NodeLayout
          Size="139,42"
          Id="Package\Import Excel &amp; CSV data to SQL Server table\Excel Source"
          TopLeft="267,82" />
        <NodeLayout
          Size="151,42"
          Id="Package\Import Excel &amp; CSV data to SQL Server table\Flat File Source"
          TopLeft="437,80" />
        <NodeLayout
          Size="121,42"
          Id="Package\Import Excel &amp; CSV data to SQL Server table\Union All"
          TopLeft="387,325" />
        <NodeLayout
          Size="156,42"
          Id="Package\Import Excel &amp; CSV data to SQL Server table\Data Conversion"
          TopLeft="378,439" />
        <EdgeLayout
          Id="Package\Import Excel &amp; CSV data to SQL Server table.Paths[Union All Output 1]"
          TopLeft="447.5,367">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="8.5,72"
              Start="0,0"
              End="8.5,64.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32" />
                  <mssgle:CubicBezierSegment
                    Point1="0,32"
                    Point2="0,36"
                    Point3="4,36" />
                  <mssgle:LineSegment
                    End="4.5,36" />
                  <mssgle:CubicBezierSegment
                    Point1="4.5,36"
                    Point2="8.5,36"
                    Point3="8.5,40" />
                  <mssgle:LineSegment
                    End="8.5,64.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Excel &amp; CSV data to SQL Server table.Paths[Flat File Source Output]"
          TopLeft="512.5,122">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="175.5,61"
              Start="0,0"
              End="175.5,53.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26.5"
                    Point2="0,30.5"
                    Point3="4,30.5" />
                  <mssgle:LineSegment
                    End="171.5,30.5" />
                  <mssgle:CubicBezierSegment
                    Point1="171.5,30.5"
                    Point2="175.5,30.5"
                    Point3="175.5,34.5" />
                  <mssgle:LineSegment
                    End="175.5,53.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Excel &amp; CSV data to SQL Server table.Paths[Excel Source Output]"
          TopLeft="336.5,124">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="92.1666666666667,201"
              Start="0,0"
              End="92.1666666666667,193.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,115.026101141925" />
                  <mssgle:CubicBezierSegment
                    Point1="0,115.026101141925"
                    Point2="0,119.026101141925"
                    Point3="4,119.026101141925" />
                  <mssgle:LineSegment
                    End="88.1666666666667,119.026101141925" />
                  <mssgle:CubicBezierSegment
                    Point1="88.1666666666667,119.026101141925"
                    Point2="92.1666666666667,119.026101141925"
                    Point3="92.1666666666667,123.026101141925" />
                  <mssgle:LineSegment
                    End="92.1666666666667,193.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Excel &amp; CSV data to SQL Server table.Paths[Data Conversion Output1]"
          TopLeft="456,481">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="13.5,65"
              Start="0,0"
              End="13.5,57.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,28.5"
                    Point2="0,32.5"
                    Point3="4,32.5" />
                  <mssgle:LineSegment
                    End="9.5,32.5" />
                  <mssgle:CubicBezierSegment
                    Point1="9.5,32.5"
                    Point2="13.5,32.5"
                    Point3="13.5,36.5" />
                  <mssgle:LineSegment
                    End="13.5,57.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Excel &amp; CSV data to SQL Server table.Paths[Data Conversion Output]"
          TopLeft="688,225">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-221.666666666667,100"
              Start="0,0"
              End="-221.666666666667,92.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,55.2169657422512" />
                  <mssgle:CubicBezierSegment
                    Point1="0,55.2169657422512"
                    Point2="0,59.2169657422512"
                    Point3="-4,59.2169657422512" />
                  <mssgle:LineSegment
                    End="-217.666666666667,59.2169657422512" />
                  <mssgle:CubicBezierSegment
                    Point1="-217.666666666667,59.2169657422512"
                    Point2="-221.666666666667,59.2169657422512"
                    Point3="-221.666666666667,63.2169657422512" />
                  <mssgle:LineSegment
                    End="-221.666666666667,92.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Import Excel &amp; CSV data to SQL Server table\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Import Excel &amp; CSV data to SQL Server table\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Import Excel text data to SQL Server varchar columns">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="170.4,41.6"
          Id="Package\Import Excel text data to SQL Server varchar columns\SQL Server TGT DB"
          TopLeft="253.571432889725,300.529415979518" />
        <NodeLayout
          Size="213.6,41.6"
          Id="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers)"
          TopLeft="227.142861011077,117.764707533959" />
        <NodeLayout
          Size="256.8,41.6"
          Id="Package\Import Excel text data to SQL Server varchar columns\Data Conversion (Unicode to Varchar)"
          TopLeft="205.714289217579,208.764708810199" />
        <EdgeLayout
          Id="Package\Import Excel text data to SQL Server varchar columns.Paths[Data Conversion Output]"
          TopLeft="336.442861053652,250.364708810199">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,50.1647071693183"
              Start="0,0"
              End="0,42.6647071693183">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.6647071693183" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Excel text data to SQL Server varchar columns.Paths[Excel Source Output]"
          TopLeft="334.028575114328,159.364707533959">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,49.4000012762407"
              Start="0,0"
              End="0,41.9000012762407">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.9000012762407" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Import Excel text data to SQL Server varchar columns\SQL Server TGT DB">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Import Excel text data to SQL Server varchar columns\Excel Source (Million Sellers)">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Load CSV data to SQL Table">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="204.8,41.6"
          Id="Package\Load CSV data to SQL Table\UK Built Up Area CSV Data"
          TopLeft="215,210" />
        <NodeLayout
          Size="244,41.6"
          Id="Package\Load CSV data to SQL Table\SQL DEV_SSIS_DB UKBuiltUpAreas"
          TopLeft="213,305" />
        <EdgeLayout
          Id="Package\Load CSV data to SQL Table.Paths[Flat File Source Output]"
          TopLeft="317.5,252">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="17.5,53"
              Start="0,0"
              End="17.5,45.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.5"
                    Point2="0,26.5"
                    Point3="4,26.5" />
                  <mssgle:LineSegment
                    End="13.5,26.5" />
                  <mssgle:CubicBezierSegment
                    Point1="13.5,26.5"
                    Point2="17.5,26.5"
                    Point3="17.5,30.5" />
                  <mssgle:LineSegment
                    End="17.5,45.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Load CSV data to SQL Table\SQL DEV_SSIS_DB UKBuiltUpAreas">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Conditional Split (Whale counting)">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="132,42"
          Id="Package\Conditional Split (Whale counting)\Whale data"
          TopLeft="381,74.1666666666667" />
        <NodeLayout
          Size="155,42"
          Id="Package\Conditional Split (Whale counting)\Conditional Split"
          TopLeft="374.166666666667,196.666666666667" />
        <EdgeLayout
          Id="Package\Conditional Split (Whale counting).Paths[Flat File Source Output]"
          TopLeft="447,116.166666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-19.8333333333333,80.5"
              Start="0,0"
              End="-19.8333333333333,73">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.8065134099617" />
                  <mssgle:CubicBezierSegment
                    Point1="0,43.8065134099617"
                    Point2="0,47.8065134099617"
                    Point3="-4,47.8065134099617" />
                  <mssgle:LineSegment
                    End="-15.8333333333333,47.8065134099617" />
                  <mssgle:CubicBezierSegment
                    Point1="-15.8333333333333,47.8065134099617"
                    Point2="-19.8333333333333,47.8065134099617"
                    Point3="-19.8333333333333,51.8065134099617" />
                  <mssgle:LineSegment
                    End="-19.8333333333333,73" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="199,42"
          Id="Package\Conditional Split (Whale counting)\NumberHarbourPorpoises"
          TopLeft="33.3333333333334,348.333333333333" />
        <NodeLayout
          Size="186,42"
          Id="Package\Conditional Split (Whale counting)\NumberOtherSightings"
          TopLeft="646.666666666667,360.833333333333" />
        <EdgeLayout
          Id="Package\Conditional Split (Whale counting).Paths[Harbour_Porpoises]"
          TopLeft="427.166666666667,238.666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-294.333333333333,109.666666666667"
              Start="0,0"
              End="-294.333333333333,102.166666666667">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.5389527458493" />
                  <mssgle:CubicBezierSegment
                    Point1="0,40.5389527458493"
                    Point2="0,44.5389527458493"
                    Point3="-4,44.5389527458493" />
                  <mssgle:LineSegment
                    End="-290.333333333333,44.5389527458493" />
                  <mssgle:CubicBezierSegment
                    Point1="-290.333333333333,44.5389527458493"
                    Point2="-294.333333333333,44.5389527458493"
                    Point3="-294.333333333333,48.5389527458493" />
                  <mssgle:LineSegment
                    End="-294.333333333333,102.166666666667" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-198.157897135417,49.5389527458493,101.9824609375,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Conditional Split (Whale counting).Paths[Non_Harbour_Porpoises]"
          TopLeft="476.166666666667,238.666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="263.5,122.166666666667"
              Start="0,0"
              End="263.5,114.666666666667">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45.6155810983397" />
                  <mssgle:CubicBezierSegment
                    Point1="0,45.6155810983397"
                    Point2="0,49.6155810983397"
                    Point3="4,49.6155810983397" />
                  <mssgle:LineSegment
                    End="259.5,49.6155810983397" />
                  <mssgle:CubicBezierSegment
                    Point1="259.5,49.6155810983397"
                    Point2="263.5,49.6155810983397"
                    Point3="263.5,53.6155810983397" />
                  <mssgle:LineSegment
                    End="263.5,114.666666666667" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="78.057421875,54.6155810983397,107.38515625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="120,42"
          Id="Package\Conditional Split (Whale counting)\Multicast"
          TopLeft="754.166666666667,119.166666666667" />
        <EdgeLayout
          Id="Package\Conditional Split (Whale counting).Paths[Bad_Rows]"
          TopLeft="476.166666666667,196.666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="338,-35.5"
              Start="0,0"
              End="338,-28">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-10.4176245210728" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-10.4176245210728"
                    Point2="0,-14.4176245210728"
                    Point3="4,-14.4176245210728" />
                  <mssgle:LineSegment
                    End="334,-14.4176245210728" />
                  <mssgle:CubicBezierSegment
                    Point1="334,-14.4176245210728"
                    Point2="338,-14.4176245210728"
                    Point3="338,-18.4176245210728" />
                  <mssgle:LineSegment
                    End="338,-28" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="136.76876953125,-9.4176245210728,64.4624609375,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>